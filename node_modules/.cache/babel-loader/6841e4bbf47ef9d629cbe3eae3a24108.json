{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kenechukwu/Documents/assistance/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik } from 'formik';\nimport './index.css'; // import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"c\",\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"f\",\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celsius: parseFloat(celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/kenechukwu/Documents/assistance/src/index.js"],"names":["React","ReactDOM","Formik","reportWebVitals","scaleNames","c","f","Calculator","Component","constructor","props","handleCelsiusChange","bind","handleFahrenheitChange","state","temperature","scale","setState","render","celsius","tryConvert","toCelsius","fahrenheit","toFahrenheit","parseFloat","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,CAAC,EAAE,SADc;AAEjBC,EAAAA,CAAC,EAAE;AAFc,CAAnB;;AAKA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKE,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE,EAAd;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAb;AACD;;AAEDL,EAAAA,mBAAmB,CAACI,WAAD,EAAc;AAC/B,SAAKE,QAAL,CAAc;AAACD,MAAAA,KAAK,EAAE,GAAR;AAAaD,MAAAA;AAAb,KAAd;AACD;;AAEDF,EAAAA,sBAAsB,CAACE,WAAD,EAAc;AAClC,SAAKE,QAAL,CAAc;AAACD,MAAAA,KAAK,EAAE,GAAR;AAAaD,MAAAA;AAAb,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMF,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACA,UAAMD,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,UAAMI,OAAO,GAAGH,KAAK,KAAK,GAAV,GAAgBI,UAAU,CAACL,WAAD,EAAcM,SAAd,CAA1B,GAAqDN,WAArE;AACA,UAAMO,UAAU,GAAGN,KAAK,KAAK,GAAV,GAAgBI,UAAU,CAACL,WAAD,EAAcQ,YAAd,CAA1B,GAAwDR,WAA3E;AAEA,wBACE;AAAA,8BACE,QAAC,gBAAD;AACE,QAAA,KAAK,EAAC,GADR;AAEE,QAAA,WAAW,EAAEI,OAFf;AAGE,QAAA,mBAAmB,EAAE,KAAKR;AAH5B;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,gBAAD;AACE,QAAA,KAAK,EAAC,GADR;AAEE,QAAA,WAAW,EAAEW,UAFf;AAGE,QAAA,mBAAmB,EAAE,KAAKT;AAH5B;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,cAAD;AACE,QAAA,OAAO,EAAEW,UAAU,CAACL,OAAD;AADrB;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AApCsC;;AA0CzClB,QAAQ,CAACiB,MAAT,eAAgB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAgCO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC,E,CACA;AACA;AACA;;AACAvB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik } from 'formik';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: 'f', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput\n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput\n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n\n\n\n\nReactDOM.render(<Calculator />, document.getElementById('root'))\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}