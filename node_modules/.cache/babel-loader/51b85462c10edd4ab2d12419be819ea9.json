{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kenechukwu/Documents/assistance/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: [this.state.isToggleOn ? 'ON' : 'OFF', console.log('Eiter on or off')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Toggle, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/kenechukwu/Documents/assistance/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Toggle","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","render","console","log","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAIA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFiB,CAIjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcJ,KAAK,KAAK;AACtBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,KAAL,CAAnB;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA,iBACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,EAEGK,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtBkC;;AAyBrCb,QAAQ,CAACW,MAAT,eACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACAd,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n        {console.log('Eiter on or off')}\n      </button>\n    );\n  }\n}\n\nReactDOM.render(\n  <Toggle />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}